volumes:
  sparepal_local_postgres_data: {}
  sparepal_local_postgres_data_backups: {}
  sparepal_local_redis_data: {}
  local_certs: {}  # New volume for certificates
  local_media: {}  # New volume for media files

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: sparepal_local_django
    container_name: sparepal_local_django
    depends_on:
      - postgres
      - redis
      - mailpit
    volumes:
      - .:/app:z
      - local_media:/app/local-dev/media  # Mount media volume
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: sparepal_production_postgres
    container_name: sparepal_local_postgres
    volumes:
      - sparepal_local_postgres_data:/var/lib/postgresql/data
      - sparepal_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: sparepal_local_mailpit
    ports:
      - "8025:8025"

  redis:
    image: docker.io/redis:6
    container_name: sparepal_local_redis

    volumes:
      - sparepal_local_redis_data:/data


  celeryworker:
    <<: *django
    image: sparepal_local_celeryworker
    container_name: sparepal_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: sparepal_local_celerybeat
    container_name: sparepal_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: sparepal_local_flower
    container_name: sparepal_local_flower
    ports:
      - '5555:5555'
    command: /start-flower

  # Nginx for cert
  nginx-proxy:
    build:
      context: .
      dockerfile: ./compose/local/nginx/Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs  # Mount certificates from local folder to Nginx
    restart: always
    depends_on:
      - django
